/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package sysAdmin;

import attributes.UserDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dheer
 */
public class IncidentAdmin extends javax.swing.JPanel {

    /**
     * Creates new form IncidentAdmin
     */
    JPanel sysLayout;
    UserDirectory userDirectory;
    String id;
    public IncidentAdmin(JPanel sysLayout,UserDirectory userDirectory,String id) {
        this.sysLayout=sysLayout;
        this.userDirectory=userDirectory;
        this.id=id;
        initComponents();
        table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txt1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt2 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1280, 1080));
        setLayout(null);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "USER ID", "INCIDENT", "INCIDENT_ID", "INDCIDENT_DATE", "INCIDENT TYPE", "STREET", "CITY", "POSTAL_CODE", "PICTURE", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        add(jScrollPane1);
        jScrollPane1.setBounds(0, 50, 1710, 200);
        add(txt1);
        txt1.setBounds(460, 207, 300, 300);

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("SEND");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(0, 270, 117, 46);

        txt2.setColumns(20);
        txt2.setRows(5);
        jScrollPane2.setViewportView(txt2);

        add(jScrollPane2);
        jScrollPane2.setBounds(190, 260, 266, 185);

        jButton3.setBackground(new java.awt.Color(255, 0, 51));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("LOGOUT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(1580, 0, 96, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/wallpaperflare.com_wallpaper.png"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1980, 1080);
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int selected =table.getSelectedRow();
        if(selected<0){
            JOptionPane.showMessageDialog(this, "No Row has been selected");
            return;
        }
        DefaultTableModel tbl= (DefaultTableModel)table.getModel();
        ImageIcon img = new ImageIcon(tbl.getValueAt(selected, 8).toString());
        Image img1 = img.getImage();
        Image img2 = img1.getScaledInstance(300,200,Image.SCALE_SMOOTH);
        ImageIcon icon= new ImageIcon(img2);
        txt1.setIcon(icon);
        
        
     
    
        String id1=tbl.getValueAt(selected, 2).toString();
        String msg="";
         try{
      Connection cn= db_connection.DatabaseConnector.getConnection();
 
        Statement st= cn.createStatement();
      String sql = "select * from incident";
      ResultSet ps= st.executeQuery(sql);

            while(ps.next()){
                if(id1.matches(ps.getString("INCIDENT_ID"))){
                    msg=ps.getString("MESSAGE");
                }
            }

       }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      }
  
         txt2.setText(msg);
         txt2.setEditable(false);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseClicked
    public void table(){
        DefaultTableModel tbl = (DefaultTableModel)table.getModel();
        tbl.setRowCount(0);
              try{
      Connection cn= db_connection.DatabaseConnector.getConnection();
 
        Statement st= cn.createStatement();
      String sql = "select * from incident";
      ResultSet ps= st.executeQuery(sql);

            while(ps.next()){

           Object[] row = new Object[20];
          row[0]=ps.getString("USERID");
          row[1]=ps.getString("INCIDENT");
          row[2]=ps.getString("INCIDENT_ID");
          row[3]=ps.getString("INCIDENT_DATE");
          row[4]=ps.getString("INCIDENT_TYPE");
          row[5]=ps.getString("STREET");
          row[6]=ps.getString("CITY");
          row[7]=ps.getString("POSTAL_CODE");
          row[8]=ps.getString("PICTURE");
          row[9]=ps.getString("STATUS");
          tbl.addRow(row);
            }

       }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      }
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         int selected =table.getSelectedRow();
         if(selected<0){
             JOptionPane.showMessageDialog(this, "No Row has been selected");
             return;
         }
          DefaultTableModel tbl= (DefaultTableModel)table.getModel();
          String userId="";
          String incident="";
          String incidentId="";
          String date="";
          String type="";
          String street="";
          String city="";
          String postalCode="";
          String picture="";
          String status="";
          String id1= tbl.getValueAt(selected, 2).toString();
                        try{
      Connection cn= db_connection.DatabaseConnector.getConnection();
 
        Statement st= cn.createStatement();
      String sql = "select * from INCIDENT";
      ResultSet ps= st.executeQuery(sql);

            while(ps.next()){
            if(ps.getString("INCIDENT_ID").equalsIgnoreCase(id1)){
           userId=ps.getString("USERID");
           incident=ps.getString("INCIDENT");
           incidentId=ps.getString("INCIDENT_ID");
           date=ps.getString("INCIDENT_DATE");
           type=ps.getString("INCIDENT_TYPE");
           street=ps.getString("STREET");
           city=ps.getString("CITY");
           postalCode=ps.getString("POSTAL_CODE");
           picture=ps.getString("PICTURE");
           status="SENT TO INCIDENT_MANAGER";
            }
                 }

       }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      }
       
                        
                         int r=0;
       try{
      Connection cn= db_connection.DatabaseConnector.getConnection();
 
        Statement st= cn.createStatement();
      String sql = "select * from INCIDENT";
      ResultSet ps= st.executeQuery(sql);

            while(ps.next()){
            if(ps.getString("INCIDENT_ID").equalsIgnoreCase(id1)){
                if(ps.getString("STATUS").matches("SENT TO INCIDENT_MANAGER")){
                   r++;
                }
                 }

            }
       }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      }
        if(r>0){
                      JOptionPane.showMessageDialog(this,""+incidentId+" is Already sent to Incident Officer");

        }else{ 
            
            
                    
                                int b=0;
       try{
      Connection cn= db_connection.DatabaseConnector.getConnection();
 
        Statement st= cn.createStatement();
      String sql = "select * from INCIDENT";
      ResultSet ps= st.executeQuery(sql);

            while(ps.next()){
            if(ps.getString("INCIDENT_ID").equalsIgnoreCase(id1)){
                if(ps.getString("STATUS").matches("REJECTED")){
                   b++;
                }
                 }

            }
       }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      }
        if(b>0){
                      JOptionPane.showMessageDialog(this,""+incidentId+" is Already Rejected");

        }else{    
            
            
            
                        
                                int a=0;
       try{
      Connection cn= db_connection.DatabaseConnector.getConnection();
 
        Statement st= cn.createStatement();
      String sql = "select * from INCIDENT";
      ResultSet ps= st.executeQuery(sql);

            while(ps.next()){
            if(ps.getString("INCIDENT_ID").equalsIgnoreCase(id1)){
                if(ps.getString("STATUS").matches("COMPLETED")){
                   a++;
                }
                 }

            }
       }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      }
        if(a>0){
                      JOptionPane.showMessageDialog(this,""+incidentId+" is Already Completed");

        }else{           
                        
                        
      int count=0;
       try{
      Connection cn= db_connection.DatabaseConnector.getConnection();
 
        Statement st= cn.createStatement();
      String sql = "select * from INCIDENT";
      ResultSet ps= st.executeQuery(sql);

            while(ps.next()){
            if(ps.getString("INCIDENT_ID").equalsIgnoreCase(id1)){
                if(ps.getString("STATUS").matches("SENT TO INCIDENT_EMPLOYEE")){
                   count++;
                }
                 }

            }
       }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      }
        if(count>0){
                      JOptionPane.showMessageDialog(this,""+incidentId+" is Already sent to Incident Manager");

        }else{                
                        
       try{
        Connection cn=  db_connection.DatabaseConnector.getConnection();
             String sql = "INSERT INTO INCIDENT_MANAGER(USERID,INCIDENT,INCIDENT_ID,INCIDENT_DATE,INCIDENT_TYPE,STREET,CITY,POSTAL_CODE,PICTURE,STATUS,REFERRED) values(?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement ps= cn.prepareStatement(sql);
            ps.setString(1,userId);
            ps.setString(2,incident);
            ps.setString(3,incidentId);
            ps.setString(4,date);
            ps.setString(5, type);
            ps.setString(6,street);
            ps.setString(7, city);
            ps.setString(8,postalCode);
            ps.setString(9,picture);
            ps.setString(10, status);
            ps.setString(11, id);
            ps.execute();
            
             try{
            Connection cn1=  db_connection.DatabaseConnector.getConnection();    
            String sql1= "UPDATE INCIDENT SET STATUS='"+status+"' WHERE INCIDENT_ID='"+id1+"'";
            PreparedStatement ps1= cn1.prepareStatement(sql1);
             ps1.execute();
             table();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }
            
            JOptionPane.showMessageDialog(this,""+incidentId+" is Sent to Banking Unit Successfully..!!");
   
            
        }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      }                  
        }  
        }}}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        sysLayout.remove(this);
        Component [] componentArray = sysLayout.getComponents();
        Component c = componentArray[componentArray.length-1];
        CardLayout layout = (CardLayout) sysLayout.getLayout();
        layout.previous(sysLayout);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    public void clear(){
        txt1.setIcon(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    private javax.swing.JLabel txt1;
    private javax.swing.JTextArea txt2;
    // End of variables declaration//GEN-END:variables
}
