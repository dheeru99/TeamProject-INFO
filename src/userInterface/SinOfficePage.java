/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface;

import java.awt.CardLayout;
import java.awt.Component;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import java.sql.PreparedStatement;
import java.util.Properties;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
/**
 *
 * @author dheer
 */
public class SinOfficePage extends javax.swing.JPanel {

    /**
     * Creates new form SinOfficerPage
     */
    JPanel rightLayout;
    String id;
    String from;
    String to;
    String host;
    String sub;
    String content;
    public SinOfficePage(JPanel rightLayout,String id) {
        this.rightLayout=rightLayout;
        this.id=id;
        initComponents();
        table();
        box();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        txt = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setLayout(null);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "NAME", "SIN", "PHONENUMBER", "EMAIL", "STATUS", "REFERRED"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        add(jScrollPane1);
        jScrollPane1.setBounds(0, 60, 1920, 230);

        jButton3.setBackground(new java.awt.Color(255, 0, 51));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("LOGOUT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(1800, 0, 110, 50);

        txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(txt);
        txt.setBounds(230, 300, 164, 39);

        jButton4.setBackground(new java.awt.Color(51, 51, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("SEND");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4);
        jButton4.setBounds(400, 300, 103, 39);

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("REJECT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(10, 300, 103, 40);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/7SAPMAWIYFHHVAO3LBPXCPXRXQ.png"))); // NOI18N
        add(jLabel6);
        jLabel6.setBounds(0, 0, 1980, 1080);
    }// </editor-fold>//GEN-END:initComponents
    public void table(){
        DefaultTableModel tbl = (DefaultTableModel)table.getModel();
        tbl.setRowCount(0);
              try{
      Connection cn= db_connection.DatabaseConnector.getConnection();
      
       
     
        Statement st= cn.createStatement();
      String sql = "select * from SIN_OFFICER";
      ResultSet ps= st.executeQuery(sql);
      

      
          while(ps.next()){
           
           Object[] row = new Object[20];
          row[0]=ps.getString("NAME");
          row[1]=ps.getString("SIN");
          row[2]=ps.getString("PHONENUMBER");
          row[3]=ps.getString("EMAIL");
          row[4]=ps.getString("STATUS");
          row[5]=ps.getString("REFERRED");
          tbl.addRow(row);
         
          }
       }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      }
    }
    public void box(){
       txt.removeAllItems(); 
          try{
      Connection cn= db_connection.DatabaseConnector.getConnection(); 
      
     Statement st= cn.createStatement();
      String sql = "SELECT * FROM SIN_EMP_LOGIN";
      ResultSet ps= st.executeQuery(sql);
      
       while(ps.next()){
      
       txt.addItem(ps.getString("EMPID"));
        }
      }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      } 
    }
    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        rightLayout.remove(this);
        Component [] componentArray = rightLayout.getComponents();
        Component c = componentArray[componentArray.length-1];
        CardLayout layout = (CardLayout) rightLayout.getLayout();
        layout.previous(rightLayout);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int selected =table.getSelectedRow();
        String empSelected= String.valueOf(txt.getSelectedItem());
        if(selected<0){
            JOptionPane.showMessageDialog(this, "No Row has been selected");
            return;
        }
        DefaultTableModel tbl= (DefaultTableModel)table.getModel();
        String sin1= tbl.getValueAt(selected, 1).toString();
        String name="";
        String sin="";
        String phoneNumber="";
        String email="";
        String status="";
        String ref="";
        try{
            Connection cn= db_connection.DatabaseConnector.getConnection();

            Statement st= cn.createStatement();
            String sql = "select * from SIN_OFFICER";
            ResultSet ps= st.executeQuery(sql);

            while(ps.next()){
                if(ps.getString("SIN").equalsIgnoreCase(sin1)){
                    name=ps.getString("NAME");
                    sin=ps.getString("SIN");
                    phoneNumber=ps.getString("PHONENUMBER");
                    email=ps.getString("EMAIL");
                    status="SENT TO FINAL PROCESS";
                    ref= ps.getString("REFERRED");
                }
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }
        int count=0;
        try{
            Connection cn= db_connection.DatabaseConnector.getConnection();

            Statement st= cn.createStatement();
            String sql = "select * from SIN_OFFICER";
            ResultSet ps= st.executeQuery(sql);

            while(ps.next()){
                if(ps.getString("SIN").equalsIgnoreCase(sin1)){
                    if(ps.getString("STATUS").matches("SENT TO FINAL PROCESS")){
                        count++;
                    }
                }

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }

        int r=0;
        try{
            Connection cn= db_connection.DatabaseConnector.getConnection();

            Statement st= cn.createStatement();
            String sql = "select * from SIN_OFFICER";
            ResultSet ps= st.executeQuery(sql);

            while(ps.next()){
                if(ps.getString("SIN").equalsIgnoreCase(sin1)){
                    if(ps.getString("STATUS").matches("REJECTED")){
                        r++;
                    }
                }

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }
        if(r>0){
            JOptionPane.showMessageDialog(this,""+sin1+" is Already Rejected..!!");

        }else{

            try{
                Connection cn= db_connection.DatabaseConnector.getConnection();

                Statement st= cn.createStatement();
                String sql = "select * from SIN_OFFICER";
                ResultSet ps= st.executeQuery(sql);

                while(ps.next()){
                    if(ps.getString("SIN").equalsIgnoreCase(sin1)){
                        if(ps.getString("STATUS").matches("APPROVED")){
                            r++;
                        }
                    }

                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(this,e);
            }
            if(r>0){
                JOptionPane.showMessageDialog(this,""+sin1+" is Already Approved..!!");

            }else{

                if(count>0){
                    JOptionPane.showMessageDialog(this,""+sin1+" is Already sent to SIN_OFFICER");

                }else{
                    int x=0;
                    try{
                        Connection cn= db_connection.DatabaseConnector.getConnection();

                        Statement st= cn.createStatement();
                        String sql = "select * from SIN_EMP";
                        ResultSet ps= st.executeQuery(sql);
                        while(ps.next()){
                            if(ps.getString("ASSIGNED").matches(empSelected)){
                                if(ps.getString("STATUS").matches("SENT TO FINAL PROCESS")){
                                    x++;
                                }
                            }
                        }

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(this,e);
                    }
                    if(x>0){
                        JOptionPane.showMessageDialog(this,""+empSelected+" is Already working on previous Application.");
                    }else{

                        try{
                            Connection cn=  db_connection.DatabaseConnector.getConnection();
                            String sql = "INSERT INTO SIN_EMP(NAME,SIN,PHONENUMBER, EMAIL,STATUS,REFERRED,ASSIGNED) values(?,?,?,?,?,?,?)";
                PreparedStatement ps= cn.prepareStatement(sql);
                ps.setString(1,name);
                ps.setString(2,sin);
                ps.setString(3,phoneNumber);
                ps.setString(4,email);
                ps.setString(5,status);
                ps.setString(6,id);
                ps.setString(7,empSelected);
                ps.execute();

                            try{
                                Connection cn1=  db_connection.DatabaseConnector.getConnection();
                                String sql1= "UPDATE SIN SET STATUS='"+status+"' WHERE SIN='"+sin1+"'";
                                PreparedStatement ps1= cn1.prepareStatement(sql1);
                                ps1.execute();

                                String sql2= "UPDATE SIN_OFFICER SET STATUS='"+status+"' WHERE SIN='"+sin1+"'";
                                PreparedStatement ps2= cn1.prepareStatement(sql2);
                                ps2.execute();

                            }catch(Exception e){
                                JOptionPane.showMessageDialog(this,e);
                            }

                            JOptionPane.showMessageDialog(this,""+sin1+" has successfully sent to SIN_EMPLOYEE..!!");
                            table();
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(this,e);
                        }
                    }}}
                }

                // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selected =table.getSelectedRow();
        if(selected<0){
            JOptionPane.showMessageDialog(this, "No Row has been selected");
            return;
        }
        DefaultTableModel tbl= (DefaultTableModel)table.getModel();
        String sin1= tbl.getValueAt(selected, 1).toString();
        int count=0;
        try{
            Connection cn= db_connection.DatabaseConnector.getConnection();

            Statement st= cn.createStatement();
            String sql = "select * from SIN_OFFICER";
            ResultSet ps= st.executeQuery(sql);

            while(ps.next()){
                if(ps.getString("SIN").equalsIgnoreCase(sin1)){
                    if(ps.getString("STATUS").matches("SENT TO FINAL PROCESS") ){
                        count++;
                    }
                }

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }
        if(count>0){
            JOptionPane.showMessageDialog(this,""+sin1+" is Already sent to SIN_OFFICER");

        }else{

            int c=0;
            try{
                Connection cn= db_connection.DatabaseConnector.getConnection();

                Statement st= cn.createStatement();
                String sql = "select * from SIN_OFFICER";
                ResultSet ps= st.executeQuery(sql);

                while(ps.next()){
                    if(ps.getString("SIN").equalsIgnoreCase(sin1)){
                        if(ps.getString("STATUS").matches("REJECTED") ){
                            c++;
                        }
                    }

                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(this,e);
            }
            if(c>0){
                JOptionPane.showMessageDialog(this,""+sin1+" is Already Rejected..!!");

            }else{
                String userId="";
                String name="";
                String email="";
                try{

                    Connection cn= db_connection.DatabaseConnector.getConnection();

                    Statement st= cn.createStatement();
                    String sql = "select * from SIN_OFFICER";
                    ResultSet ps= st.executeQuery(sql);

                

                    while(ps.next()){
                        if(ps.getString("SIN").equalsIgnoreCase(sin1)){
                            
                                    email=ps.getString("EMAIL");
                                    name=ps.getString("NAME");
                               
                        }}
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(this,e);
                    }

                    try{

                        Connection cn1=  db_connection.DatabaseConnector.getConnection();
                        String sql1=  "UPDATE SIN SET STATUS='REJECTED' WHERE SIN='"+sin1+"'";
                        PreparedStatement ps1= cn1.prepareStatement(sql1);
                        ps1.execute();
                        table();

                        String sql2=  "UPDATE SIN_OFFICER SET STATUS='REJECTED' WHERE SIN='"+sin1+"'";
                        PreparedStatement ps2= cn1.prepareStatement(sql2);
                        ps2.execute();
                        table();

                        from ="dheerajjayanth@gmail.com";
                        to=email;
                        host="localhost";
                        sub="Sorry Your SIN Application got Rejected..!!";
                        content= "Hi "+name+",\n"
                        + "\n"
                        + "We have Rejected your "+sin1+" application. Can you please contact the SIN website for more information.\n"
                        + "\n"
                        + "Thanks and Regards,\n"
                        + "SIN_OFFICER \n"
                        + ""+id+"\n"
                        + "\n"
                        + "If you have any concerns. Please contact us by +1 4375184224 or dheerajjayanth@gmail.com";
                        Properties p= new Properties();
                        p.put("mail.smtp.auth", "true");
                        p.put("mail.smtp.starttls.enable", "true");
                        p.put("mail.smtp.ssl.trust", "smtp.gmail.com");
                        p.put("mail.smtp.host", "smtp.gmail.com");
                        p.put("mail.smtp.port", "587");

                        Session s= Session.getDefaultInstance(p, new javax.mail.Authenticator(){
                            protected PasswordAuthentication getPasswordAuthentication(){
                                return new PasswordAuthentication("dheerajjayanth@gmail.com","rtowuvazupeivdmr");
                            }
                        });
                        try{
                            MimeMessage m = new MimeMessage(s);
                            m.setFrom(from);
                            m.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
                            m.setSubject(sub);
                            m.setText(content);
                            Transport.send(m);
                        }catch(Exception e){
                            e.printStackTrace();
                        }

                        JOptionPane.showMessageDialog(this,""+sin1+" has been Rejected Successfully");

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(this,e);
                    }

                }

            }

            // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JComboBox<String> txt;
    // End of variables declaration//GEN-END:variables
}
