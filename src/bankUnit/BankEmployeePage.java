/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package bankUnit;

import java.awt.CardLayout;
import java.awt.Component;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.*;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.mail.*;
import javax.mail.internet.*;
import javax.activation.*;

/**
 *
 * @author dheer
 */
public class BankEmployeePage extends javax.swing.JPanel {

    /**
     * Creates new form BankEmployeePage
     */
    JPanel pageLayout;
    String id;
     String from;
    String to;
    String host;
    String sub;
    String content;
    public BankEmployeePage(JPanel pageLayout, String id) {
        this.pageLayout=pageLayout;
        this.id=id;
        initComponents();
        table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "USER_ID", "BANK_ID", "BANK_NAME", "TYPE", "ACCOUNT_NUMBER", "SIN", "PHONENUMBER", "AMOUNT", "STATUS", "REFERRED"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table);

        add(jScrollPane2);
        jScrollPane2.setBounds(0, 48, 1920, 200);

        jButton1.setBackground(new java.awt.Color(0, 0, 255));
        jButton1.setText("APPROVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(0, 250, 106, 38);

        jButton3.setBackground(new java.awt.Color(255, 0, 51));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("LOGOUT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(1780, 0, 96, 44);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/6395a9817591e.png"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1980, 1080);
    }// </editor-fold>//GEN-END:initComponents
    public void table(){
        DefaultTableModel tbl = (DefaultTableModel)table.getModel();
        tbl.setRowCount(0);
              try{
      Connection cn= db_connection.DatabaseConnector.getConnection();
 
        Statement st= cn.createStatement();
      String sql = "select * from BANK_EMPLOYEE";
      ResultSet ps= st.executeQuery(sql);
      
      

            while(ps.next()){
              if(ps.getString("ASSIGNED").equalsIgnoreCase(id)){
           Object[] row = new Object[20];
          row[0]=ps.getString("USERID");
          row[1]=ps.getString("BANK_ID");
          row[2]=ps.getString("BANK_NAME");
          row[3]=ps.getString("TYPE");
          row[4]=ps.getString("ACCOUNT_NUMBER");
          row[5]=ps.getString("SIN");
          row[6]=ps.getString("PHONE");
          row[7]=ps.getString("AMOUNT");
          row[8]=ps.getString("STATUS");
          row[9]=ps.getString("REFERRED");
          tbl.addRow(row);
              }
            }

       }catch(Exception e){
          JOptionPane.showMessageDialog(this,e);
      }
    }
    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selected =table.getSelectedRow();
        int count=0;
        if(selected<0){
            JOptionPane.showMessageDialog(this, "No Row has been selected");
            return;
        }
        DefaultTableModel tbl= (DefaultTableModel)table.getModel();
        String bankId="";
        String status="";
        String id1= tbl.getValueAt(selected, 1).toString();
        try{
            String s1="";
            Connection cn= db_connection.DatabaseConnector.getConnection();

            Statement st= cn.createStatement();
            String sql = "select * from BANK_EMPLOYEE";
            ResultSet ps= st.executeQuery(sql);
            
            while(ps.next()){
                if(ps.getString("BANK_ID").equalsIgnoreCase(id1)){
                    bankId= ps.getString("BANK_ID");
                    s1=ps.getString("STATUS");
                    status="APPROVED";
                }
            }
          
                if(!(s1.equalsIgnoreCase("APPROVED"))){
                    String sql1= "UPDATE BANK SET STATUS='APPROVED' WHERE BANK_ID='"+bankId+"'";
                    PreparedStatement ps1= cn.prepareStatement(sql1);
                    ps1.execute();
                    
                    String sql2= "UPDATE BANK_MANAGER SET STATUS='APPROVED' WHERE BANK_ID='"+bankId+"'";
                    PreparedStatement ps2= cn.prepareStatement(sql2);
                    ps2.execute();
                    
                    String sql3= "UPDATE BANK_EMPLOYEE SET STATUS='APPROVED' WHERE BANK_ID='"+bankId+"'";
                    PreparedStatement ps3= cn.prepareStatement(sql3);
                    ps3.execute();
                    
                    String bankName="";
                    String name="";
                    String email="";
                    String account="";
                    try{
                    Connection cn1= db_connection.DatabaseConnector.getConnection();

                    Statement st4= cn1.createStatement();
                    String sql4 = "SELECT * FROM USER";
                    ResultSet ps4= st4.executeQuery(sql4);

                    Statement st5= cn1.createStatement();
                    String sql5 = "SELECT * FROM BANK_EMPLOYEE";
                    ResultSet ps5= st5.executeQuery(sql5);

                    while(ps5.next()){
                        if(ps5.getString("BANK_ID").equalsIgnoreCase(id1)){
                            bankName=ps5.getString("BANK_NAME");
                            account= ps5.getString("ACCOUNT_NUMBER");
                            while(ps4.next()){
                                if(ps5.getString("USERID").equalsIgnoreCase(ps4.getString("ID"))){
                                    name= ps4.getString("NAME");
                                    email=  ps4.getString("EMAIL");

                                }}}
                            }
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(this,e);
                        }
                    
                    from ="dheerajjayanth@gmail.com";
                        to=email;
                        host="localhost";
                        sub="Your Account Accepted...!!";
                        content= "Hi "+name+",\n"
                        + "\n"
                        + "We have Accepted your application and your Account Number: "+account+". You are able to see your Account details in your indeed application. If you have any queries please contact the bank for more information.\n"
                        + "\n"
                        + "Thanks and Regards,\n"
                        + ""+bankName+"\n"
                        + ""+id+"\n"
                        + "\n"
                        + "If you have any concerns. Please contact us by +1 4375184224 or dheerajjayanth@gmail.com";
                        Properties p= new Properties();
                        p.put("mail.smtp.auth", "true");
                        p.put("mail.smtp.starttls.enable", "true");
                        p.put("mail.smtp.ssl.trust", "smtp.gmail.com");
                        p.put("mail.smtp.host", "smtp.gmail.com");
                        p.put("mail.smtp.port", "587");

                        Session s= Session.getDefaultInstance(p, new javax.mail.Authenticator(){
                            protected PasswordAuthentication getPasswordAuthentication(){
                                return new PasswordAuthentication("dheerajjayanth@gmail.com","rtowuvazupeivdmr");
                            }
                        });
                        try{
                            MimeMessage m = new MimeMessage(s);
                            m.setFrom(from);
                            m.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
                            m.setSubject(sub);
                            m.setText(content);
                            Transport.send(m);
                        }catch(Exception e){
                            e.printStackTrace();
                        }
                    
                    
                    JOptionPane.showMessageDialog(this,""+bankId+" has Successfully Approved..!!");
                    table();
                }else{
                    JOptionPane.showMessageDialog(this,""+bankId+" has Already Approved");

                
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        pageLayout.remove(this);
        Component [] componentArray = pageLayout.getComponents();
        Component c = componentArray[componentArray.length-1];
        CardLayout layout = (CardLayout) pageLayout.getLayout();
        layout.previous(pageLayout);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
